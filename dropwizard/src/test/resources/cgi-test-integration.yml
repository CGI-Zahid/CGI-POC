jwtSignatureSecret: o5KnhuFU8q8bo6qPxG2Z75q3yLlNiVCSOUd0vqbv6X8E8QLUSbP6Uxn7hn2678NZ3sQ1ZKy9ih7jAHXu

# Database settings.
database:

    # the name of your JDBC driver
    driverClass: com.mysql.jdbc.Driver

    # the username
    user: root

    # the password
    password: test

    # the JDBC URL
    url: jdbc:mysql://mysql:3306/cgi_poc?createDatabaseIfNotExist=true

    # The initial size of the connection pool.
    initialSize: 2

    # The minimum size of the connection pool.
    minSize : 2

    # The maximum size of the connection pool.
    maxSize : 8

# Enable HTTPS
server:
    applicationConnectors:
        - type: http
          port: 8080
        - type: https
          port: 8443
          keyStorePath: development.keystore
          keyStorePassword: p@ssw0rd
          validateCerts: false
          validatePeers: false

#Jersey client settings
jerseyClient:
    #The maximum time to wait for a connection to be returned from the connection pool.
    connectionRequestTimeout: 1000ms
    #The maximum time to wait for a connection to open.
    connectionTimeout: 9000ms
    #The maximum idle time for a connection, once established.
    timeout: 9000ms
    #The size of the work queue of the pool used for asynchronous requests.
    #Additional threads will be spawn only if the queue is reached its maximum size.
    workQueueSize: 20	
    
# CORS settings
#   A list of comma-separated domains that the service will allow cross-origin access from.  If the Origin matches one
#     of the domains in the list the application will generate a matching Access-Control-Allow-Origin header in the response.
#     If the Origin header does not match, the application will not send the A-C-A-O header back to the client.
#   Uses Jetty's CrossOriginFilter, so partial regex is supported:
#     i.e. https?://*.cgi.[a-z]{3}   -> supports http/https with any subdomain and any 3 character top-level domain for the host "cgi"
#   c.f. https://www.eclipse.org/jetty/documentation/9.3.x/cross-origin-filter.html
# IMPORTANT NOTE: if there is no * character in the expression, the filter processes it as a raw string, NOT as a regex
cors:
  allowedDomains: https?://*.cgi.[a-z]{3},https?://*.cgi.[a-z]{3}:[0-9]{4},http://localhost:9000,http://localhost:8000,https?://(192.168).*.*:[0-9]{4},https?://(10.1).*.*:[0-9]{4}
  allowedHeaders:
   - Accept
   - Authorization
   - Content-Length
   - Content-Type
   - Content-Disposition
   - Cookie
   - Origin
   - Referer
   - x-amz-date
   - x-api-key
   - x-requested-by
   - x-requested-with

mapsApi:
  apiURL: http://maps.googleapis.com/maps/api/geocode/json
  apiKey: <your_key>

# Notification mail settings.
mail:

   #The host running the SMTP server to use. 
  hostname: "127.0.0.1"

   #The port at which the SMTP server listens on. 
  port: 3025

   #The address used as From for outgoing notification mails sent by the server.
  systemEmail: "someuser@gmail.com"

   #The username used to access the mail server.
  username: "someuser"

   #The password used to access the mail server.
  password: "somepass"
  
   #Connect using SSL.
  ssl: false
  
   #Connect using TLS.
  tls: false

# Logging settings
logging:
  level: INFO
  loggers:
    com.cgi: DEBUG

# Swagger settings
swagger:
  resourcePackage: com.cgi.poc.dw.rest.resource
scheduler:
  thread: 2
  jobs:    
     - eventType: Fire
       eventURL: https://wildfire.cr.usgs.gov/arcgis/rest/services/geomac_dyn/MapServer/0/query?f=json&where=1%3D1&outFields=*&outSR=4326
       #the delay to start the job after the server start
       delay: 10
       #the delay between to running job's
       period: 10
       #the time unit to define the delay and the period
       timeUnit: SECONDS

twilio:
  accountSID: ACf7fd4c1c6ce58597ea87ef2b6c179cdb
  authToken: ff0440de6f1a7586bfaa9d87f558e1a4
  phoneNumber: +15005550006

firebase:
  fcmURL: https://fcm.googleapis.com/fcm/send
  fcmKey: AAAA8XU5NgQ:APA91bEfETw0rTo7J1exWlzARff99f_SlyI1SVZywP_LGsLBOMAuVGbclayJGIfVRRb624N87-CP0MY6TmHR2jgBLU5irF7T4N40cFanF6or6pxLEGYMEisWilC6GjOL2Wx-0BXt8LRv
